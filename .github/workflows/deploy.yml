name: Deploy

on:
  push:
    branches:
      - main 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout repository
      uses: actions/checkout@v2

    # Node.js 설정
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.11.1'

    # 환경 변수 설정
    - name: Set environment variables
      run: |
        echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> $GITHUB_ENV
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV
        echo "NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }}" >> $GITHUB_ENV
        echo "NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }}" >> $GITHUB_ENV
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
        echo "GOOGLE_TTS_KEY=${{ secrets.GOOGLE_TTS_KEY }}" >> $GITHUB_ENV
        echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV

    # SSH 키를 임시 파일로 생성
    - name: Create SSH key file
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > /tmp/sodam-ec2-deploy-pipe1.pem
        chmod 400 /tmp/sodam-ec2-deploy-pipe1.pem

    # .env 파일을 EC2로 전송
    - name: Transfer .env file to EC2
      run: |
        echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" > .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }}" >> .env
        echo "NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }}" >> .env
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
        echo "GOOGLE_TTS_KEY=${{ secrets.GOOGLE_TTS_KEY }}" >> .env
        echo "PORT=${{ secrets.PORT }}" >> .env
        scp -o StrictHostKeyChecking=no -i /tmp/sodam-ec2-deploy-pipe1.pem .env ubuntu@3.36.127.254:/home/ubuntu/Sodam/.env

    # EC2에 SSH 접속하여 애플리케이션 배포
    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i /tmp/sodam-ec2-deploy-pipe1.pem ubuntu@3.36.127.254 <<EOF
          cd /home/ubuntu/Sodam
          git pull origin main
          npm install
          pm2 restart all
        EOF
